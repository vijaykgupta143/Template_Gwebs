/*!
 * SplitText 3.6.1
 * https://greensock.com
 * 
 * @license Copyright 2021, GreenSock. All rights reserved.
 * Subject to the terms at https://greensock.com/standard-license or for Club GreenSock members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
 */

!function (D, u) { "object" == typeof exports && "undefined" != typeof module ? u(exports) : "function" == typeof define && define.amd ? define(["exports"], u) : u((D = D || self).window = D.window || {}) }(this, function (e) { "use strict"; var v =""; function m() { return String.fromCharCode.apply(null, arguments) } function p(D) { return F.getComputedStyle(D) } function s(D, u) { var e; return d(D) ? D : "string" == (e = typeof D) && !u && D ? a.call(X.querySelectorAll(D), 0) : D && "object" == e && "length" in D ? a.call(D, 0) : D ? [D] : [] } function t(D) { return "absolute" === D.position || !0 === D.absolute } function u(D, u) { for (var e, t = u.length; -1 < --t;)if (e = u[t], D.substr(0, e.length) === e) return e.length } function w(D, u) { void 0 === D && (D = ""); var e = ~D.indexOf("++"), t = 1; return e && (D = D.split("++").join("")), function () { return "<" + u + " style='position:relative;display:inline-block;'" + (D ? " class='" + D + (e ? t++ : "") + "'>" : ">") } } function x(D, u, e) { var t = D.nodeType; if (1 === t || 9 === t || 11 === t) for (D = D.firstChild; D; D = D.nextSibling)x(D, u, e); else 3 !== t && 4 !== t || (D.nodeValue = D.nodeValue.split(u).join(e)) } function y(D, u) { for (var e = u.length; -1 < --e;)D.push(u[e]) } function z(D, u, e) { for (var t; D && D !== u;) { if (t = D._next || D.nextSibling) return t.textContent.charAt(0) === e; D = D.parentNode || D._parent } } function A(D) { var u, e, t = s(D.childNodes), F = t.length; for (u = 0; u < F; u++)(e = t[u])._isSplit ? A(e) : u && e.previousSibling && 3 === e.previousSibling.nodeType ? (e.previousSibling.nodeValue += 3 === e.nodeType ? e.nodeValue : e.firstChild.nodeValue, D.removeChild(e)) : 3 !== e.nodeType && (D.insertBefore(e.firstChild, e), D.removeChild(e)) } function B(D, u) { return parseFloat(u[D]) || 0 } function C(D, u, e, F, C, i, n) { var E, s, r, l, o, d, a, h, f, c, g, m, v = p(D), _ = B("paddingLeft", v), b = -999, S = B("borderBottomWidth", v) + B("borderTopWidth", v), w = B("borderLeftWidth", v) + B("borderRightWidth", v), T = B("paddingTop", v) + B("paddingBottom", v), N = B("paddingLeft", v) + B("paddingRight", v), L = B("fontSize", v) * (u.lineThreshold || .2), O = v.textAlign, W = [], H = [], V = [], j = u.wordDelimiter || " ", M = u.tag ? u.tag : u.span ? "span" : "div", R = u.type || u.split || "chars,words,lines", k = C && ~R.indexOf("lines") ? [] : null, P = ~R.indexOf("words"), q = ~R.indexOf("chars"), G = t(u), I = u.linesClass, J = ~(I || "").indexOf("++"), K = [], Q = "flex" === v.display, U = D.style.display; for (J && (I = I.split("++").join("")), Q && (D.style.display = "block"), r = (s = D.getElementsByTagName("*")).length, o = [], E = 0; E < r; E++)o[E] = s[E]; if (k || G) for (E = 0; E < r; E++)((d = (l = o[E]).parentNode === D) || G || q && !P) && (m = l.offsetTop, k && d && Math.abs(m - b) > L && ("BR" !== l.nodeName || 0 === E) && (a = [], k.push(a), b = m), G && (l._x = l.offsetLeft, l._y = m, l._w = l.offsetWidth, l._h = l.offsetHeight), k && ((l._isSplit && d || !q && d || P && d || !P && l.parentNode.parentNode === D && !l.parentNode._isSplit) && (a.push(l), l._x -= _, z(l, D, j) && (l._wordEnd = !0)), "BR" === l.nodeName && (l.nextSibling && "BR" === l.nextSibling.nodeName || 0 === E) && k.push([]))); for (E = 0; E < r; E++)if (d = (l = o[E]).parentNode === D, "BR" !== l.nodeName) if (G && (f = l.style, P || d || (l._x += l.parentNode._x, l._y += l.parentNode._y), f.left = l._x + "px", f.top = l._y + "px", f.position = "absolute", f.display = "block", f.width = l._w + 1 + "px", f.height = l._h + "px"), !P && q) if (l._isSplit) for (l._next = s = l.nextSibling, l.parentNode.appendChild(l); s && 3 === s.nodeType && " " === s.textContent;)l._next = s.nextSibling, l.parentNode.appendChild(s), s = s.nextSibling; else l.parentNode._isSplit ? (l._parent = l.parentNode, !l.previousSibling && l.firstChild && (l.firstChild._isFirst = !0), l.nextSibling && " " === l.nextSibling.textContent && !l.nextSibling.nextSibling && K.push(l.nextSibling), l._next = l.nextSibling && l.nextSibling._isFirst ? null : l.nextSibling, l.parentNode.removeChild(l), o.splice(E--, 1), r--) : d || (m = !l.nextSibling && z(l.parentNode, D, j), l.parentNode._parent && l.parentNode._parent.appendChild(l), m && l.parentNode.appendChild(X.createTextNode(" ")), "span" === M && (l.style.display = "inline"), W.push(l)); else l.parentNode._isSplit && !l._isSplit && "" !== l.innerHTML ? H.push(l) : q && !l._isSplit && ("span" === M && (l.style.display = "inline"), W.push(l)); else k || G ? (l.parentNode && l.parentNode.removeChild(l), o.splice(E--, 1), r--) : P || D.appendChild(l); for (E = K.length; -1 < --E;)K[E].parentNode.removeChild(K[E]); if (k) { for (G && (c = X.createElement(M), D.appendChild(c), g = c.offsetWidth + "px", m = c.offsetParent === D ? 0 : D.offsetLeft, D.removeChild(c)), f = D.style.cssText, D.style.cssText = "display:none;"; D.firstChild;)D.removeChild(D.firstChild); for (h = " " === j && (!G || !P && !q), E = 0; E < k.length; E++) { for (a = k[E], (c = X.createElement(M)).style.cssText = "display:block;text-align:" + O + ";position:" + (G ? "absolute;" : "relative;"), I && (c.className = I + (J ? E + 1 : "")), V.push(c), r = a.length, s = 0; s < r; s++)"BR" !== a[s].nodeName && (l = a[s], c.appendChild(l), h && l._wordEnd && c.appendChild(X.createTextNode(" ")), G && (0 === s && (c.style.top = l._y + "px", c.style.left = _ + m + "px"), l.style.top = "0px", m && (l.style.left = l._x - m + "px"))); 0 === r ? c.innerHTML = "&nbsp;" : P || q || (A(c), x(c, String.fromCharCode(160), " ")), G && (c.style.width = g, c.style.height = l._h + "px"), D.appendChild(c) } D.style.cssText = f } G && (n > D.clientHeight && (D.style.height = n - T + "px", D.clientHeight < n && (D.style.height = n + S + "px")), i > D.clientWidth && (D.style.width = i - N + "px", D.clientWidth < i && (D.style.width = i + w + "px"))), Q && (U ? D.style.display = U : D.style.removeProperty("display")), y(e, W), P && y(F, H), y(C, V) } function D(D, e, F, C) { var i, n, E, s, r, l, o, d, p = e.tag ? e.tag : e.span ? "span" : "div", a = ~(e.type || e.split || "chars,words,lines").indexOf("chars"), h = t(e), B = e.wordDelimiter || " ", f = " " !== B ? "" : h ? "&#173; " : " ", A = "</" + p + ">", c = 1, g = e.specialChars ? "function" == typeof e.specialChars ? e.specialChars : u : null, y = X.createElement("div"), m = D.parentNode; for (m.insertBefore(y, D), y.textContent = D.nodeValue, m.removeChild(D), o = -1 !== (i = function getText(D) { var u = D.nodeType, e = ""; if (1 === u || 9 === u || 11 === u) { if ("string" == typeof D.textContent) return D.textContent; for (D = D.firstChild; D; D = D.nextSibling)e += getText(D) } else if (3 === u || 4 === u) return D.nodeValue; return e }(D = y)).indexOf("<"), !1 !== e.reduceWhiteSpace && (i = i.replace(b, " ").replace(_, "")), o && (i = i.split("<").join("{{LT}}")), r = i.length, n = (" " === i.charAt(0) ? f : "") + F(), E = 0; E < r; E++)if (l = i.charAt(E), g && (d = g(i.substr(E), e.specialChars))) l = i.substr(E, d || 1), n += a && " " !== l ? C() + l + "</" + p + ">" : l, E += d - 1; else if (l === B && i.charAt(E - 1) !== B && E) { for (n += c ? A : "", c = 0; i.charAt(E + 1) === B;)n += f, E++; E === r - 1 ? n += f : ")" !== i.charAt(E + 1) && (n += f + F(), c = 1) } else "{" === l && "{{LT}}" === i.substr(E, 6) ? (n += a ? C() + "{{LT}}</" + p + ">" : "{{LT}}", E += 5) : 55296 <= l.charCodeAt(0) && l.charCodeAt(0) <= 56319 || 65024 <= i.charCodeAt(E + 1) && i.charCodeAt(E + 1) <= 65039 ? (s = ((i.substr(E, 12).split(v) || [])[1] || "").length || 2, n += a && " " !== l ? C() + i.substr(E, s) + "</" + p + ">" : i.substr(E, s), E += s - 1) : n += a && " " !== l ? C() + l + "</" + p + ">" : l; D.outerHTML = n + (c ? A : ""), o && x(m, "{{LT}}", "<") } function E(u, e, F, C) { var i, n, r = s(u.childNodes), l = r.length, o = t(e); if (3 !== u.nodeType || 1 < l) { for (e.absolute = !1, i = 0; i < l; i++)(n = r[i])._next = n._isFirst = n._parent = n._wordEnd = null, 3 === n.nodeType && !/\S+/.test(n.nodeValue) || (o && 3 !== n.nodeType && "inline" === p(n).display && (n.style.display = "inline-block", n.style.position = "relative"), n._isSplit = !0, E(n, e, F, C)); return e.absolute = o, void (u._isSplit = !0) } D(u, e, F, C) } var X, F, i, n, _ = /(?:\r|\n|\t\t)/g, b = /(?:\s\s+)/g, r = "SplitText", l = m(103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109), o = function (D) { for (var u = 0 === (window ? window.location.href : "").indexOf(m(102, 105, 108, 101, 58, 47, 47)) || -1 !== D.indexOf(m(108, 111, 99, 97, 108, 104, 111, 115, 116)) || -1 !== D.indexOf(m(49, 50, 55, 46, 48, 32, 48, 46, 49)), e = [l, m(99, 111, 100, 101, 112, 101, 110, 46, 105, 111), m(99, 111, 100, 101, 112, 101, 110, 46, 112, 108, 117, 109, 98, 105, 110, 103), m(99, 111, 100, 101, 112, 101, 110, 46, 100, 101, 118), m(99, 111, 100, 101, 112, 101, 110, 46, 97, 112, 112), m(112, 101, 110, 115, 46, 99, 108, 111, 117, 100), m(99, 115, 115, 45, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), m(99, 100, 112, 110, 46, 105, 111), m(112, 101, 110, 115, 46, 105, 111), m(103, 97, 110, 110, 111, 110, 46, 116, 118), m(99, 111, 100, 101, 99, 97, 110, 121, 111, 110, 46, 110, 101, 116), m(116, 104, 101, 109, 101, 102, 111, 114, 101, 115, 116, 46, 110, 101, 116), m(99, 101, 114, 101, 98, 114, 97, 120, 46, 99, 111, 46, 117, 107), m(116, 121, 109, 112, 97, 110, 117, 115, 46, 110, 101, 116), m(116, 119, 101, 101, 110, 109, 97, 120, 46, 99, 111, 109), m(116, 119, 101, 101, 110, 108, 105, 116, 101, 46, 99, 111, 109), m(112, 108, 110, 107, 114, 46, 99, 111), m(104, 111, 116, 106, 97, 114, 46, 99, 111, 109), m(119, 101, 98, 112, 97, 99, 107, 98, 105, 110, 46, 99, 111, 109), m(97, 114, 99, 104, 105, 118, 101, 46, 111, 114, 103), m(99, 111, 100, 101, 115, 97, 110, 100, 98, 111, 120, 46, 105, 111), m(99, 115, 98, 46, 97, 112, 112), m(115, 116, 97, 99, 107, 98, 108, 105, 116, 122, 46, 99, 111, 109), m(99, 111, 100, 105, 101, 114, 46, 105, 111), m(109, 111, 116, 105, 111, 110, 116, 114, 105, 99, 107, 115, 46, 99, 111, 109), m(115, 116, 97, 99, 107, 111, 118, 101, 114, 102, 108, 111, 119, 46, 99, 111, 109), m(115, 116, 97, 99, 107, 101, 120, 99, 104, 97, 110, 103, 101, 46, 99, 111, 109), m(106, 115, 102, 105, 100, 100, 108, 101, 46, 110, 101, 116)], t = e.length; -1 < --t;)if (-1 !== D.indexOf(e[t])) return !0; return u && window && window.console && console.log(m(87, 65, 82, 78, 73, 78, 71, 58, 32, 97, 32, 115, 112, 101, 99, 105, 97, 108, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32) + r + m(32, 105, 115, 32, 114, 117, 110, 110, 105, 110, 103, 32, 108, 111, 99, 97, 108, 108, 121, 44, 32, 98, 117, 116, 32, 105, 116, 32, 119, 105, 108, 108, 32, 110, 111, 116, 32, 119, 111, 114, 107, 32, 111, 110, 32, 97, 32, 108, 105, 118, 101, 32, 100, 111, 109, 97, 105, 110, 32, 98, 101, 99, 97, 117, 115, 101, 32, 105, 116, 32, 105, 115, 32, 97, 32, 109, 101, 109, 98, 101, 114, 115, 104, 105, 112, 32, 98, 101, 110, 101, 102, 105, 116, 32, 111, 102, 32, 67, 108, 117, 98, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 46, 32, 80, 108, 101, 97, 115, 101, 32, 115, 105, 103, 110, 32, 117, 112, 32, 97, 116, 32, 104, 116, 116, 112, 58, 47, 47, 103, 114, 101, 101, 110, 115, 111, 99, 107, 46, 99, 111, 109, 47, 99, 108, 117, 98, 47, 32, 97, 110, 100, 32, 116, 104, 101, 110, 32, 100, 111, 119, 110, 108, 111, 97, 100, 32, 116, 104, 101, 32, 39, 114, 101, 97, 108, 39, 32, 118, 101, 114, 115, 105, 111, 110, 32, 102, 114, 111, 109, 32, 121, 111, 117, 114, 32, 71, 114, 101, 101, 110, 83, 111, 99, 107, 32, 97, 99, 99, 111, 117, 110, 116, 32, 119, 104, 105, 99, 104, 32, 104, 97, 115, 32, 110, 111, 32, 115, 117, 99, 104, 32, 108, 105, 109, 105, 116, 97, 116, 105, 111, 110, 115, 46, 32, 84, 104, 101, 32, 102, 105, 108, 101, 32, 121, 111, 117, 39, 114, 101, 32, 117, 115, 105, 110, 103, 32, 119, 97, 115, 32, 108, 105, 107, 101, 108, 121, 32, 100, 111, 119, 110, 108, 111, 97, 100, 101, 100, 32, 102, 114, 111, 109, 32, 101, 108, 115, 101, 119, 104, 101, 114, 101, 32, 111, 110, 32, 116, 104, 101, 32, 119, 101, 98, 32, 97, 110, 100, 32, 105, 115, 32, 114, 101, 115, 116, 114, 105, 99, 116, 101, 100, 32, 116, 111, 32, 108, 111, 99, 97, 108, 32, 117, 115, 101, 32, 111, 114, 32, 111, 110, 32, 115, 105, 116, 101, 115, 32, 108, 105, 107, 101, 32, 99, 111, 100, 101, 112, 101, 110, 46, 105, 111, 46)), u }(window ? window.location.host : ""), d = Array.isArray, a = [].slice, h = ((n = SplitText.prototype).split = function split(D) { this.isSplit && this.revert(), this.vars = D = D || this.vars, this._originals.length = this.chars.length = this.words.length = this.lines.length = 0; for (var u, e, t, F = this.elements.length, i = D.tag ? D.tag : D.span ? "span" : "div", n = w(D.wordsClass, i), s = w(D.charsClass, i); -1 < --F;)t = this.elements[F], this._originals[F] = t.innerHTML, u = t.clientHeight, e = t.clientWidth, E(t, D, n, s), C(t, D, this.chars, this.words, this.lines, e, u); return this.chars.reverse(), this.words.reverse(), this.lines.reverse(), this.isSplit = !0, this }, n.revert = function revert() { var e = this._originals; if (!e) throw "revert() call wasn't scoped properly."; return this.elements.forEach(function (D, u) { return D.innerHTML = e[u] }), this.chars = [], this.words = [], this.lines = [], this.isSplit = !1, this }, SplitText.create = function create(D, u) { return new SplitText(D, u) }, SplitText); function SplitText(D, u) { i || function _initCore() { X = document, F = window, i = 1 }(), this.elements = s(D), this.chars = [], this.words = [], this.lines = [], this._originals = [], this.vars = u || {}, o && this.split(u) } h.version = "3.6.1", e.SplitText = h, e.default = h; if (typeof (window) === "undefined" || window !== e) { Object.defineProperty(e, "__esModule", { value: !0 }) } else { delete e.default } });
